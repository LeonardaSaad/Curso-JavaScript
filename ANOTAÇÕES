PROGRAMAÇÃO
GERAL:
    Bookmarks: Ctrl + Alt + K
    Multi-Cursor: Ctrl + Shift + L

    var ( variável)

    /* comentário em CSS */
    <!-- Comentário em html --!>
    //
    document.write ("<br>");    (<br> pula linha)

    + concatenação
    window.prompt('')           (retorna como uma string)
    window.alert('É um grande prazer em te conhecer, ' + nome +'!')         (concatenação)

    (number + number) para adição
    (string + string) para concatenação

    <strong> </strong>

    ('')   (String)

    0 = Domingo
    1 = Segunda
    2 = terça
    3 = Quarta
    4 = Quinta
    5 = Sexta
    6 = Sábado
----------------//------------------
CONVERSÃO:
    String > Number
        - Number.parseInt(n) ou parseInt(n)             (Conversão de uma String para um número inteiro)
            Ex: var n1 = Number.parseInt(window.prompt('Digite um número: '))
        - Number.parseFloat(n)                          (Para número real, com vírgula)
            Ex: var n2 = Number.parseFloat(window.prompt('Digite um número: '))
        - Number(n)                                     (Ele converte sozinho para o tipo definido)

    Number > String
        String(n)                   (Converte número para String)
        n.toString()                (Converte número para String, porém coloca o que vai ser convertido na frente)
----------------//------------------
FORMATANDO STRING:
    var s = 'JavaScript'
    'Eu estou aprendendo s'                 (não vaz interpolação)
    'Eu setou aprendendo ' + s              (usa concatenação)
    `Eu estou aprendendo ${s}`              (usa template string)

    var s = 'JavaScript'
    s.length                                (informa quantos caracteres a string tem)
    s.toUpperCase()                         (coloca tudo em letra 'MAIÚSCULA')
    s.toLowerCase()                         (coloca tudo em letra 'minúsculas')

    var n1 = 1543.5
    n1
    n1.toFixed(2) '1545.50'                                                     (Mostra com o número com qunatas casas decimais forem pedidas)
    n1.toFixed(2).replace('','')                                                (Troca uma coisa por outra)
    n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})
        // (coloca o símbolo de dinheiro do país informado, no navegador o "." e "," são convertidos automaticamente)
----------------//------------------
OPERADORES:
Aritméticos:
	+     (soma)
	-     (diminui)
	*     (multiplica)
	/     (divisão real/com vírgula)
	%     (resto da divisão inteira(5 % 2 = 1))
	**    (potência(5 ** 2 = 5² = 25))
	
    5 + 3 / 2 = 6.5
	(5 + 3) / 2 = 4
    
    Ordem:
      |   ( )
      |   **
      |   *  /  %    (esquerda pra direita)
     \/   +  -       (esquerda pra direita)
Atribuição:
    Atribuição Simples:
        var a = 5 + 3   = 8
        var b = a % 5  = 3
        var c = 5 * b ** 2   = 45
        var d = 10 - a / 2   = 6
        var e = 6 * 2 / d   = 2
        var f = b % e + 4 / e   = 1 + 2 = 3

    Auto-Atribuição:
        var n = 3
        n = n + 4     n = 7         (n += 4)
        n = n - 5     n = 2         (n -= 5)
        ...

    Incremento:
        var x = 5
        x = x + 1   = 6             (x ++  /  ++n)
        x = x - 1   = 5             (x --  /  --n)
Relacionais:
    = (recebe)
    == (igual)
    === (testa valor e tipo)
    
    5 > 2  -> true      (maior)
    7 < 4  -> false     (menor)
    8 >= 8 -> true      (maior ou igual)
    9 <= 7 -> false     (menor ou igual)
    5 == 5 -> true      (igual)
    4 != 4 -> false     (ñ igual)
    Identidade:
        5 == 5     -> true
        5 == '5'   -> true    (testa valor, ñ tipo)
        5 === '5'  -> false   (testa valor e tipo)
        5 === 5    -> true
Lógicos:
    !  (negação) 
        - Unário 
            ! true  -> false
            ! false -> true
    && (conjunção) (e)
        - Binário
            true && true   -> true
            true && false  -> false
            false && true  -> false
            false && false -> false
    || (disjunção) (ou)
        -Binário 
            true || true   -> true
            true || false  -> true
            false || true  -> true
            false || false -> false
    
    OBS: casos tenham os três em uma mesma expressão, será resolvido na mesma ordem em que eles estão acima.
    
    Ex:
        idade >= 15 && idade <= 17               (a idade está entre 15 e 17?)
        estado == 'RJ' || estado == 'SP'         (o Estado é RJ ou SP?)
        salário > 1500 && sexo != 'M'            (o salário é acima de 1500 e não é homem?)
Ternários:
    ?
    :
    
    teste ? true : false    
    |        |       |-> O que vai aocntecer se esse teste lógico for falso
    |        -> O que vai acontecer se esse teste lógico for verdadeiro
    -> Teste lógico   // dá verdadeiro ou falso
    
    Ex: 
        média >= 7.0 ? "Aprovado" : "Reprovado"
----------------//------------------
DOM:
    - Modelo de Objeto de documento
    - Ele fornece uma representação estrutural do documento como uma árvore.
    Árvore DOM:
        window
            - location (localização)
            - document (documento atual)
                html
                    - head (cabeçalho)
                        meta
                        title
                    - body (corpo)
                        h1
                        p
                        p
                            strong
                        div
                    head e body são filhos(child(está abaixo de html)) de html
                    html é um parente (parent(está acima de head e body))
            - history (de onde vc veio, pra onde vai)
    Selecionando:
        - por Marca:
            getElementsByTagName()   // + de um obj.
        - por ID: #
            getElementById()
        - por Nome:
            getElementsByName()
        - por Classe: .
            getElementsByClassName()
        - por Seletor:
            querySelector()
            querySelectorAll()
    Eventos:
        mouseenter    (quandoo mouse entrar na div)
        mousemove     (quando o mouse se mover na div)
        mousedown     (quando o mouse precionar)
        mouseup       (quando o mouse soltar)   
        click         (click)
        mouseout      (quando o mouse sai da div)
    Funções:
        function ação(param){
            (bloco)
        }
----------------//------------------
CONDIÇÃO:
    if(condição){
        true
    }else {
        false
    }

    Tipos de Condição:
        - Condição Simples:
            if (condição) {
                true
            }
        - Condição Composta:
            if(condição){
                true
            }else {
                false
            }
        - Condições Aninhadas:
            if (cond1) {
                //bloco1
            } else {
                if (cond2) {
                    //bloco2
                }else {
                    //bloco3
                }
            }
        - Condição Múltipla
            switch (expressão){
                case valor 1:

                    break
                case valor 2:

                    break
                case valor 3:

                    break
                defaut:

                    break
            }
----------------//------------------
REPETIÇÕES:
    - Repetição com teste no começo:
        while (condição) {
            (Esse bloco só vai acontecer enquanto a condição for verdadeira)
            [COLOCAR C++ PELO AMOR DE DEUS]
        } (Chegando nessa chave ele vai voltar para o while e vai testar dnv)
        (Quando a condição é falsa o fluxo é desviado para o lado de fora)

            Exemplo: 
                function comerPizza() {
                    while (temFatia()){
                        comerFatia()
                    }
                } 
    
    - Repetição com teste no final:
        do{

        } while (condição) (repete o bloco se a condição for verdadeira)
        (condição for falsa ele sai do bloco)
    
    - Repedição com variável de controle:
        for(início;teste;incr){     (teste sendo verdadeiro ele executa o bloco)

        }   (bloco sendo executado ele volta para cima) (enquanto ele volta ele faz o incremento e dnv o teste)
        (teste sendo falso ele sai do bloco e segue o fluxo)

        Exemplo:
            var c = 1
            while (c <= 10) {
                {bloco}
                c++
            }
            -----------------
            for (var c=1;c<=10;c++) {

            }
----------------//------------------
VARIÁVEIS COMPOSTAS:
    - Variáreis Simples: só conseguem armazenar uma valor por vez.
    - Variáveis Compostas: devem ser capazes de armazenar vários valores em uma mesma estrutura.

    - Variável começa no 0
    
    Ex:
        vaga a = [0,1,2]
        a= array vetor      0,1,2= índice chave     [] = Elemento       0 = conteúdo valor

    - Array Vetor (Variável) = vetor é uma variável com vários espaços
    - Elemento = par que agrupa o espaço da memoria, o valor colocado dentro dele e o índice
    - Índice = números
    - Conteúdo Valor =
    
    - Array é uma variável que tem vários elementos, cada elemento é composto por seu valor e por uma chave de identificação.

    - let num = [5,8,4]       (definir os valores)
    - num[3] = 6              (adciona um valor a variável, mas tem que informar o índice que ele vai ter)
    - num.push(7)             (adciona um valor a variável, não precisa informar o índice)
    - num.lenght              (fala quantos elementos tem)
    - num.sort()              (coloca os valores em ordem crescente)
    - num.indexOf(7)          (acha um valor na Array, caso o número procurado não exista na variável ele informa -1)

    for (let pos in num) {
        console.log(num[pos])           (Essa sintaxe do for só funciona para array e objetos)
    }
----------------//------------------
FUNÇÕES:
    - São ações executadas assim que são chamadas ou em decorrência de algum evento.
    - Uma função pode receber parâmetros e retornar um resultado.

    function ação(param) {              (param = parâmetro)
        -                               (ação)
        return res                      (retorno)
    }
    ação(5)                             (chamada)

    Ex:
        function parimp(n) {
            if (n%2==0) {
                return 'par'
            } else {
                return 'ímpar'
            }
        }
        let res = parimp(11)
----------------//------------------
BÁSICO OBJETO:
    Object {}
        Declarar um object é com {}(chaves)

        Ex:
            let amigo = {nome:'José', sexo:'M', peso: 85.4, engordar(p){}}
